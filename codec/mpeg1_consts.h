#ifndef MPEG1_CONSTS_H_INCLUDED
#define MPEG1_CONSTS_H_INCLUDED

#include "vlc_coding.h"
#include "mpeg1dec.h"

#define RL_ESCAPE_CODE  255


/* Default quantization matrix for intra-frames
 */
static const uint8_t __quant_matrix_intra[64] = {
     8, 16, 19, 22, 26, 27, 29, 34,
    16, 16, 22, 24, 27, 29, 34, 37,
    19, 22, 26, 27, 29, 34, 34, 38,
    22, 22, 26, 27, 29, 34, 37, 40,
    22, 26, 27, 29, 32, 35, 40, 48,
    26, 27, 29, 32, 35, 40, 48, 58,
    26, 27, 29, 34, 38, 46, 56, 69,
    27, 29, 35, 38, 46, 56, 69, 83
};

/* Default quantization matrix for non intra-frames
 */
static const uint8_t __quant_matrix_non_intra[64] = {
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
};

/* Table to dereference the frame rate enum in sequence header
 */
static const int32_t __seq_hdr_frame_rate[16][2] = {
    {0,     1}, //forbidden
    {24000, 1001}, //23.97
    {24,    1},
    {25,    1},
    {30000, 1001}, //29.97
    {30,    1},
    {50,    1},
    {60000, 1001}, //59.94
    {60,    1},
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
};

/* Table for aspect ratio enum
 */
static const int32_t __seq_hdr_aspect_ratio[16][2] = {
    {0,     1}, //forbidden
    {1,     1},
    {4,     3},
    {16,    9},
    {2,     1}, //actually this is 2.21:1
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
    {0,     1}, //reserved
};

/* VLC Prefix table for macroblock address increment field
 */
static const VLCPrefixEntry __vlc_mb_addr_increment[] = {
    {0x18,  11, 33}, //0000 0011 000
    {0x19,  11, 32}, //0000 0011 001
    {0x1A,  11, 31}, //0000 0011 010
    {0x1B,  11, 30}, //0000 0011 011
    {0x1C,  11, 29}, //0000 0011 100
    {0x1D,  11, 28}, //0000 0011 101
    {0x1E,  11, 27}, //0000 0011 110
    {0x1F,  11, 26}, //0000 0011 111
    {0x20,  11, 25}, //0000 0100 000
    {0x21,  11, 24}, //0000 0100 001
    {0x22,  11, 23}, //0000 0100 010
    {0x23,  11, 22}, //0000 0100 011
    {0x12,  10, 21}, //0000 0100 10
    {0x13,  10, 20}, //0000 0100 11
    {0x14,  10, 19}, //0000 0101 00
    {0x15,  10, 18}, //0000 0101 01
    {0x16,  10, 17}, //0000 0101 10
    {0x17,  10, 16}, //0000 0101 11
    {0x06,   8, 15}, //0000 0110
    {0x07,   8, 14}, //0000 0111
    {0x08,   8, 13}, //0000 1000
    {0x09,   8, 12}, //0000 1001
    {0x0A,   8, 11}, //0000 1010
    {0x0B,   8, 10}, //0000 1011
    {0x06,   7,  9}, //0000 110 //ERROR (0x06)
    {0x07,   7,  8}, //0000 111 //(0x07)
    {0x02,   5,  7}, //0001 0
    {0x03,   5,  6}, //0001 1
    {0x02,   4,  5}, //0010
    {0x03,   4,  4}, //0011
    {0x02,   3,  3}, //010
    {0x03,   3,  2}, //011
    {0x01,   1,  1}, //1
    {0x00,   0,  0} //end of table
};

/* VLC Prefix table for macroblock type field (for I-pictures)
 */
static const VLCPrefixEntry __vlc_mb_type_i[] = {
    {0x01,   1,  0x10}, //1
    {0x01,   2,  0x11}, //01
    {0x00,   0,  0}, //end of table
};

/* VLC Prefix table for macroblock type field (for P-pictures)
 */
static const VLCPrefixEntry __vlc_mb_type_p[] = {
    {0x01,   3,  0x02}, //001
    {0x01,   2,  0x08}, //01
    {0x01,   5,  0x09}, //0000 1
    {0x01,   1,  0x0A}, //1
    {0x02,   5,  0x0B}, //0001 0
    {0x03,   5,  0x10}, //0001 1
    {0x01,   6,  0x11}, //0000 01
    {0x00,   0,  0} //end of table
};

/* VLC Prefix table for macroblock type field (for B-pictures)
 */
static const VLCPrefixEntry __vlc_mb_type_b[] = {
    {0x02,   4,  0x02}, //0010
    {0x02,   3,  0x04}, //010
    {0x02,   2,  0x05}, //10
    {0x03,   4,  0x0A}, //0011
    {0x03,   6,  0x0B}, //0000 11
    {0x03,   3,  0x0C}, //011
    {0x02,   6,  0x0D}, //0000 10
    {0x03,   2,  0x0E}, //11
    {0x02,   5,  0x0F}, //0001 0
    {0x03,   5,  0x10}, //0001 1
    {0x01,   6,  0x11}, //0001 01
    {0x00,   0,  0} //end of table
};

/* VLC Prefix table for macroblock type field (for D-pictures)
 */
static const VLCPrefixEntry __vlc_mb_type_d[] = {
    {0x01,   1,  0x10}, //1
    {0x00,   0,  0} //end of table
};

/* VLC Prefix table for macroblock's coded block pattern
 */
static const VLCPrefixEntry __vlc_mb_cb_pattern[] = {
	{0xb,	5,	1},	// (0101 1)
	{0x9,	5,	2},	// (0100 1)
	{0xd,	6,	3},	// (0011 01)
	{0xd,	4,	4},	// (1101)
	{0x17,	7,	5},	// (0010 111)
	{0x13,	7,	6},	// (0010 011)
	{0x1f,	8,	7},	// (0001 1111)
	{0xc,	4,	8},	// (1100)
	{0x16,	7,	9},	// (0010 110)
	{0x12,	7,	10},	// (0010 010)
	{0x1e,	8,	11},	// (0001 1110)
	{0x13,	5,	12},	// (1001 1)
	{0x1b,	8,	13},	// (0001 1011)
	{0x17,	8,	14},	// (0001 0111)
	{0x13,	8,	15},	// (0001 0011)
	{0xb,	4,	16},	// (1011)
	{0x15,	7,	17},	// (0010 101)
	{0x11,	7,	18},	// (0010 001)
	{0x1d,	8,	19},	// (0001 1101)
	{0x11,	5,	20},	// (1000 1)
	{0x19,	8,	21},	// (0001 1001)
	{0x15,	8,	22},	// (0001 0101)
	{0x11,	8,	23},	// (0001 0001)
	{0xf,	6,	24},	// (0011 11)
	{0xf,	8,	25},	// (0000 1111)
	{0xd,	8,	26},	// (0000 1101)
	{0x3,	9,	27},	// (0000 0001 1)
	{0xf,	5,	28},	// (0111 1)
	{0xb,	8,	29},	// (0000 1011)
	{0x7,	8,	30},	// (0000 0111)
	{0x7,	9,	31},	// (0000 0011 1)
	{0xa,	4,	32},	// (1010)
	{0x14,	7,	33},	// (0010 100)
	{0x10,	7,	34},	// (0010 000)
	{0x1c,	8,	35},	// (0001 1100)
	{0xe,	6,	36},	// (0011 10)
	{0xe,	8,	37},	// (0000 1110)
	{0xc,	8,	38},	// (0000 1100)
	{0x2,	9,	39},	// (0000 0001 0)
	{0x10,	5,	40},	// (1000 0)
	{0x18,	8,	41},	// (0001 1000)
	{0x14,	8,	42},	// (0001 0100)
	{0x10,	8,	43},	// (0001 0000)
	{0xe,	5,	44},	// (0111 0)
	{0xa,	8,	45},	// (0000 1010)
	{0x6,	8,	46},	// (0000 0110)
	{0x6,	9,	47},	// (0000 0011 0)
	{0x12,	5,	48},	// (1001 0)
	{0x1A,	8,	49},	// (0001 1010)
	{0x16,	8,	50},	// (0001 0110)
	{0x12,	8,	51},	// (0001 0010)
	{0xd,	5,	52},	// (0110 1)
	{0x9,	8,	53},	// (0000 1001)
	{0x5,	8,	54},	// (0000 0101)
	{0x5,	9,	55},	// (0000 0010 1)
	{0xc,	5,	56},	// (0110 0)
	{0x8,	8,	57},	// (0000 1000)
	{0x4,	8,	58},	// (0000 0100)
	{0x4,	9,	59},	// (0000 0010 0)
	{0x7,	3,	60},	// (111)
	{0xa,	5,	61},	// (0101 0)
	{0x8,	5,	62},	// (0100 0)
	{0xc,	6,	63},	// (0011 00)
	{0x00,	0,	0} //end of table

/*  {0x0B,   5,      1}, //0101 1
    {0x09,   5,      2}, //0100 1
    {0x0D,   6,      3}, //0011 01
    {0x0D,   4,      4}, //1101
    {0x17,   7,      5}, //0010 111
    {0x13,   7,      6}, //0010 011
    {0x1F,   8,      7}, //0001 1111
    {0x0C,   4,      8}, //1100
    {0x16,   7,      9}, //0010 110
    {0x12,   7,     10}, //0010 010
    {0x1E,   8,     11}, //0001 1110
    {0x13,   6,     12}, //1001 1
    //FINISH FROM HERE
    {0x01,   8,     13}, //0001 1011
    {0x01,   8,     14}, //0001 0111
    {0x01,   4,     15}, //1011
    {0x01,   7,     16}, //0010 101
    {0x01,   7,     17}, //0010 001
    {0x01,   8,     18}, //0001 1101
    {0x01,   6,     19}, //1000 1
    {0x01,   8,     20}, //0001 1001
    {0x01,   4,     21}, //0001
    {0x01,   8,     22}, //0001 0101
    {0x01,   8,     23}, //0001 0001
    {0x01,   7,     24}, //0011 11
    {0x01,   8,     25}, //0000 1111
    {0x01,   8,     26}, //0000 1101
    {0x01,   9,     27}, //0000 0001 1
    {0x01,   5,     28}, //0111 1
    {0x01,   8,     29}, //0000 1011
    {0x01,   8,     30}, //0000 0111
    {0x01,   9,     31}, //0000 0011 1
    {0x01,   4,     32}, //1010
    {0x01,   7,     33}, //0010 100
    {0x01,   7,     34}, //0010 000
    {0x01,   9,     35}, //0001 1100
    {0x01,   6,     36}, //0011 10
    {0x01,   8,     37}, //0000 1110
    {0x01,   8,     38}, //0000 1100
    {0x01,   9,     39}, //0000 0001 0
    {0x01,   5,     40}, //1000 0
    {0x01,   8,     41}, //0001 1000
    {0x01,   8,     42}, //0001 0100
    {0x01,   8,     43}, //0001 0000
    {0x01,   6,     44}, //0111 0
    {0x01,   8,     45}, //0000 1010
    {0x01,   8,     46}, //0000 0110
    {0x01,   9,     47}, //0000 0011 0
    {0x01,   6,     48}, //1001 0
    {0x01,   8,     49}, //0001 1010
    {0x01,   8,     50}, //0001 0110
    {0x01,   8,     51}, //0001 0010
    {0x01,   6,     52}, //0110 1
    {0x01,   8,     53}, //0000 1001
    {0x01,   8,     54}, //0000 0101
    {0x01,   9,     55}, //0000 0010 1
    {0x01,   6,     56}, //0110 0
    {0x01,   8,     57}, //0000 1000
    {0x01,   8,     58}, //0000 0100
    {0x01,   9,     59}, //0000 0010 0
    {0x01,   3,     60}, //111
    {0x01,   6,     61}, //0101 0
    {0x01,   6,     62}, //0100 0
    {0x01,   7,     63}, //0011 00
    {0x00,   0,     0} //end of table
    */
};

/* VLC Prefix table for positive motion values
 */
static const VLCPrefixEntry __vlc_motion_code[] = {
    {0x01,   1,     0}, //1

    {0x02,   3,     1}, //010
    {0x02,   4,     2}, //0010
    {0x02,   5,     3}, //0001 0
    {0x06,   7,     4}, //0000 110
    {0x0A,   8,     5}, //0000 1010
    {0x08,   8,     6}, //0000 1000
    {0x06,   8,     7}, //0000 0110
    {0x16,  10,     8}, //0000 0101 10
    {0x14,  10,     9}, //0000 0101 00
    {0x12,  10,    10}, //0000 0100 10
    {0x22,  11,    11}, //0000 0100 010
    {0x20,  11,    12}, //0000 0100 000
    {0x1E,  11,    13}, //0000 0011 110
    {0x1C,  11,    14}, //0000 0011 100
    {0x1A,  11,    15}, //0000 0011 010
    {0x18,  11,    16}, //0000 0011 000

    {0x03,   3,    -1}, //011
    {0x03,   4,    -2}, //0011
    {0x03,   5,    -3}, //0001 1
    {0x07,   7,    -4}, //0000 111
    {0x0B,   8,    -5}, //0000 1011
    {0x09,   8,    -6}, //0000 1001
    {0x07,   8,    -7}, //0000 0111
    {0x17,  10,    -8}, //0000 0101 11
    {0x15,  10,    -9}, //0000 0101 01
    {0x13,  10,   -10}, //0000 0100 11
    {0x23,  11,   -11}, //0000 0100 011
    {0x21,  11,   -12}, //0000 0100 001
    {0x1F,  11,   -13}, //0000 0011 111
    {0x1D,  11,   -14}, //0000 0011 101
    {0x1B,  11,   -15}, //0000 0011 011
    {0x19,  11,   -16}, //0000 0011 001

    {0x00,   0,     0} //end of table
};

/* VLC Prefix table for DC size for luminance blocks
 */
static const VLCPrefixEntry __vlc_dc_size_y[] = {
    {0x04,   3,     0}, //100
    {0x00,   2,     1}, //00
    {0x01,   2,     2}, //01
    {0x05,   3,     3}, //101
    {0x06,   3,     4}, //110
    {0x0E,   4,     5}, //1110
    {0x1E,   5,     6}, //1111 0
    {0x3E,   6,     7}, //1111 10
    {0x7E,   7,     8}, //1111 110
    {0x00,   0,     0} //end of table
};

/* VLC Prefix table for DC size for chrominance blocks
 */
static const VLCPrefixEntry __vlc_dc_size_c[] = {
    {0x00,   2,     0}, //00
    {0x01,   2,     1}, //01
    {0x02,   2,     2}, //10
    {0x06,   3,     3}, //110
    {0x0E,   4,     4}, //1110
    {0x1E,   5,     5}, //1111 0
    {0x3E,   6,     6}, //1111 10
    {0x7E,   7,     7}, //1111 110
    {0xFE,   8,     8}, //1111 1110
    {0x00,   0,     0} //end of table
};

/* VLC prefixes for DC/AC coefficients run-levels
 */
static const VLCPrefixEntry __vlc_run_levels[] = {
	{0x2,	2,	0}, 	//0/1  (10)
	{0x3,	2,	1}, 	//-0/1 (11)
	{0x6,	3,	2},	    //0/1  (110)
	{0x7,	3,	3},	    //-0/1 (111)
	{0x8,	5,	4},	    //0/2  (0100 0)
	{0x9,	5,	5},	    //-0/2 (0100 1)
	{0xa,	6,	6},	    //0/3  (0010 10)
	{0xb,	6,	7},	    //-0/3 (0010 11)
	{0xc,	8,	8},	    //0/4  (0000 1100)
	{0xd,	8,	9},	    //-0/4 (0000 1101)
	{0x4c,	9,	10},	//0/5  (0010 0110 0)
	{0x4d,	9,	11},	//-0/5 (0010 0110 1)
	{0x42,	9,	12},	//0/6  (0010 0001 0)
	{0x43,	9,	13},	//-0/6 (0010 0001 1)
	{0x14,	11,	14},	//0/7  (0000 0010 100)
	{0x15,	11,	15},	//-0/7 (0000 0010 101)
	{0x3a,	13,	16},	//0/8  (0000 0001 1101 0)
	{0x3b,	13,	17},	//-0/8 (0000 0001 1101 1)
	{0x30,	13,	18},	//0/9  (0000 0001 1000 0)
	{0x31,	13,	19},	//-0/9 (0000 0001 1000 1)
	{0x26,	13,	20},	//0/10 (0000 0001 0011 0)
	{0x27,	13,	21},	//-0/10 (0000 0001 0011 1)
	{0x20,	13,	22},	//0/11  (0000 0001 0000 0)
	{0x21,	13,	23},	//-0/11 (0000 0001 0000 1)
	{0x34,	14,	24},	//0/12  (0000 0000 1101 00)
	{0x35,	14,	25},	//-0/12 (0000 0000 1101 01)
	{0x32,	14,	26},	//0/13  (0000 0000 1100 10)
	{0x33,	14,	27},	//-0/13 (0000 0000 1100 11)
	{0x30,	14,	28},	//0/14  (0000 0000 1100 00)
	{0x31,	14,	29},	//-0/14 (0000 0000 1100 01)
	{0x2e,	14,	30},	//0/15  (0000 0000 1011 10)
	{0x2f,	14,	31},	//-0/15 (0000 0000 1011 11)
	{0x3e,	15,	32},	//0/16  (0000 0000 0111 110)
	{0x3f,	15,	33},	//-0/16 (0000 0000 0111 111)
	{0x3c,	15,	34},	//0/17  (0000 0000 0111 100)
	{0x3d,	15,	35},	//-0/17 (0000 0000 0111 101)
	{0x3a,	15,	36},	//0/18  (0000 0000 0111 010)
	{0x3b,	15,	37},	//-0/18 (0000 0000 0111 011)
	{0x38,	15,	38},	//0/19  (0000 0000 0111 000)
	{0x39,	15,	39},	//-0/19 (0000 0000 0111 001)
	{0x36,	15,	40},	//0/20  (0000 0000 0110 110)
	{0x37,	15,	41},	//-0/20 (0000 0000 0110 111)
	{0x34,	15,	42},	//0/21  (0000 0000 0110 100)
	{0x35,	15,	43},	//-0/21 (0000 0000 0110 101)
	{0x32,	15,	44},	//0/22  (0000 0000 0110 010)
	{0x33,	15,	45},	//-0/22 (0000 0000 0110 011)
	{0x30,	15,	46},	//0/23  (0000 0000 0110 000)
	{0x31,	15,	47},	//-0/23 (0000 0000 0110 001)
	{0x2e,	15,	48},	//0/24  (0000 0000 0101 110)
	{0x2f,	15,	49},	//-0/24 (0000 0000 0101 111)
	{0x2c,	15,	50},	//0/25  (0000 0000 0101 100)
	{0x2d,	15,	51},	//-0/25 (0000 0000 0101 101)
	{0x2a,	15,	52},	//0/26  (0000 0000 0101 010)
	{0x2b,	15,	53},	//-0/26 (0000 0000 0101 011)
	{0x28,	15,	54},	//0/27  (0000 0000 0101 000)
	{0x29,	15,	55},	//-0/27 (0000 0000 0101 001)
	{0x26,	15,	56},	//0/28  (0000 0000 0100 110)
	{0x27,	15,	57},	//-0/28 (0000 0000 0100 111)
	{0x24,	15,	58},	//0/29  (0000 0000 0100 100)
	{0x25,	15,	59},	//-0/29 (0000 0000 0100 101)
	{0x22,	15,	60},	//0/30  (0000 0000 0100 010)
	{0x23,	15,	61},	//-0/30 (0000 0000 0100 011)
	{0x20,	15,	62},	//0/31  (0000 0000 0100 000)
	{0x21,	15,	63},	//-0/31 (0000 0000 0100 001)
	{0x30,	16,	64},	//0/32  (0000 0000 0011 0000)
	{0x31,	16,	65},	//-0/32 (0000 0000 0011 0001)
	{0x2e,	16,	66},	//0/33  (0000 0000 0010 1110)
	{0x2f,	16,	67},	//-0/33 (0000 0000 0010 1111)
	{0x2c,	16,	68},	//0/34  (0000 0000 0010 1100)
	{0x2d,	16,	69},	//-0/34 (0000 0000 0010 1101)
	{0x2a,	16,	70},	//0/35  (0000 0000 0010 1010)
	{0x2b,	16,	71},	//-0/35 (0000 0000 0010 1011)
	{0x28,	16,	72},	//0/36  (0000 0000 0010 1000)
	{0x29,	16,	73},	//-0/36 (0000 0000 0010 1001)
	{0x26,	16,	74},	//0/37  (0000 0000 0010 0110)
	{0x27,	16,	75},	//-0/37 (0000 0000 0010 0111)
	{0x24,	16,	76},	//0/38  (0000 0000 0010 0100)
	{0x25,	16,	77},	//-0/38 (0000 0000 0010 0101)
	{0x22,	16,	78},	//0/39  (0000 0000 0010 0010)
	{0x23,	16,	79},	//-0/39 (0000 0000 0010 0011)
	{0x20,	16,	80},	//0/40  (0000 0000 0010 0000)
	{0x21,	16,	81},	//-0/40 (0000 0000 0010 0001)
	{0x6,	4,	82},	//1/1  (0110)
	{0x7,	4,	83},	//-1/1 (0111)
	{0xc,	7,	84},	//1/2  (0001 100)
	{0xd,	7,	85},	//-1/2 (0001 101)
	{0x4a,	9,	86},	//1/3  (0010 0101 0)
	{0x4b,	9,	87},	//-1/3 (0010 0101 1)
	{0x18,	11,	88},	//1/4  (0000 0011 000)
	{0x19,	11,	89},	//-1/4 (0000 0011 001)
	{0x36,	13,	90},	//1/5  (0000 0001 1011 0)
	{0x37,	13,	91},	//-1/5 (0000 0001 1011 1)
	{0x2c,	14,	92},	//1/6  (0000 0000 1011 00)
	{0x2d,	14,	93},	//-1/6 (0000 0000 1011 01)
	{0x2a,	14,	94},	//1/7  (0000 0000 1010 10)
	{0x2b,	14,	95},	//-1/7 (0000 0000 1010 11)
	{0x3e,	16,	96},	//1/8  (0000 0000 0011 1110)
	{0x3f,	16,	97},	//-1/8 (0000 0000 0011 1111)
	{0x3c,	16,	98},	//1/9  (0000 0000 0011 1100)
	{0x3d,	16,	99},	//-1/9 (0000 0000 0011 1101)
	{0x3a,	16,	100},	//1/10 (0000 0000 0011 1010)
	{0x3b,	16,	101},	//-1/10 (0000 0000 0011 1011)
	{0x38,	16,	102},	//1/11  (0000 0000 0011 1000)
	{0x39,	16,	103},	//-1/11 (0000 0000 0011 1001)
	{0x36,	16,	104},	//1/12  (0000 0000 0011 0110)
	{0x37,	16,	105},	//-1/12 (0000 0000 0011 0111)
	{0x34,	16,	106},	//1/13  (0000 0000 0011 0100)
	{0x35,	16,	107},	//-1/13 (0000 0000 0011 0101)
	{0x32,	16,	108},	//1/14  (0000 0000 0011 0010)
	{0x33,	16,	109},	//-1/14 (0000 0000 0011 0011)
	{0x26,	17,	110},	//1/15  (0000 0000 0001 0011 0)
	{0x27,	17,	111},	//-1/15 (0000 0000 0001 0011 1)
	{0x24,	17,	112},	//1/16  (0000 0000 0001 0010 0)
	{0x25,	17,	113},	//-1/16 (0000 0000 0001 0010 1)
	{0x22,	17,	114},	//1/17  (0000 0000 0001 0001 0)
	{0x23,	17,	115},	//-1/17 (0000 0000 0001 0001 1)
	{0x20,	17,	116},	//1/18  (0000 0000 0001 0000 0)
	{0x21,	17,	117},	//-1/18 (0000 0000 0001 0000 1)
	{0xa,	5,	118},	//2/1  (0101 0)
	{0xb,	5,	119},	//-2/1 (0101 1)
	{0x8,	8,	120},	//2/2  (0000 1000)
	{0x9,	8,	121},	//-2/2 (0000 1001)
	{0x16,	11,	122},	//2/3  (0000 0010 110)
	{0x17,	11,	123},	//-2/3 (0000 0010 111)
	{0x28,	13,	124},	//2/4  (0000 0001 0100 0)
	{0x29,	13,	125},	//-2/4 (0000 0001 0100 1)
	{0x28,	14,	126},	//2/5  (0000 0000 1010 00)
	{0x29,	14,	127},	//-2/5 (0000 0000 1010 01)
	{0xe,	6,	128},	//3/1  (0011 10)
	{0xf,	6,	129},	//-3/1 (0011 11)
	{0x48,	9,	130},	//3/2  (0010 0100 0)
	{0x49,	9,	131},	//-3/2 (0010 0100 1)
	{0x38,	13,	132},	//3/3  (0000 0001 1100 0)
	{0x39,	13,	133},	//-3/3 (0000 0001 1100 1)
	{0x26,	14,	134},	//3/4  (0000 0000 1001 10)
	{0x27,	14,	135},	//-3/4 (0000 0000 1001 11)
	{0xc,	6,	136},	//4/1  (0011 00)
	{0xd,	6,	137},	//-4/1 (0011 01)
	{0x1e,	11,	138},	//4/2  (0000 0011 110)
	{0x1f,	11,	139},	//-4/2 (0000 0011 111)
	{0x24,	13,	140},	//4/3  (0000 0001 0010 0)
	{0x25,	13,	141},	//-4/3 (0000 0001 0010 1)
	{0xe,	7,	142},	//5/1  (0001 110)
	{0xf,	7,	143},	//-5/1 (0001 111)
	{0x12,	11,	144},	//5/2  (0000 0010 010)
	{0x13,	11,	145},	//-5/2 (0000 0010 011)
	{0x24,	14,	146},	//5/3  (0000 0000 1001 00)
	{0x25,	14,	147},	//-5/3 (0000 0000 1001 01)
	{0xa,	7,	148},	//6/1  (0001 010)
	{0xb,	7,	149},	//-6/1 (0001 011)
	{0x3c,	13,	150},	//6/2  (0000 0001 1110 0)
	{0x3d,	13,	151},	//-6/2 (0000 0001 1110 1)
	{0x28,	17,	152},	//6/3  (0000 0000 0001 0100 0)
	{0x29,	17,	153},	//-6/3 (0000 0000 0001 0100 1)
	{0x8,	7,	154},	//7/1  (0001 000)
	{0x9,	7,	155},	//-7/1 (0001 001)
	{0x2a,	13,	156},	//7/2  (0000 0001 0101 0)
	{0x2b,	13,	157},	//-7/2 (0000 0001 0101 1)
	{0xe,	8,	158},	//8/1  (0000 1110)
	{0xf,	8,	159},	//-8/1 (0000 1111)
	{0x22,	13,	160},	//8/2  (0000 0001 0001 0)
	{0x23,	13,	161},	//-8/2 (0000 0001 0001 1)
	{0xa,	8,	162},	//9/1  (0000 1010)
	{0xb,	8,	163},	//-9/1 (0000 1011)
	{0x22,	14,	164},	//9/2  (0000 0000 1000 10)
	{0x23,	14,	165},	//-9/2 (0000 0000 1000 11)
	{0x4e,	9,	166},	//10/1 (0010 0111 0)
	{0x4f,	9,	167},	//-10/1 (0010 0111 1)
	{0x20,	14,	168},	//10/2  (0000 0000 1000 00)
	{0x21,	14,	169},	//-10/2 (0000 0000 1000 01)
	{0x46,	9,	170},	//11/1  (0010 0011 0)
	{0x47,	9,	171},	//-11/1 (0010 0011 1)
	{0x34,	17,	172},	//11/2  (0000 0000 0001 1010 0)
	{0x35,	17,	173},	//-11/2 (0000 0000 0001 1010 1)
	{0x44,	9,	174},	//12/1  (0010 0010 0)
	{0x45,	9,	175},	//-12/1 (0010 0010 1)
	{0x32,	17,	176},	//12/2  (0000 0000 0001 1001 0)
	{0x33,	17,	177},	//-12/2 (0000 0000 0001 1001 1)
	{0x40,	9,	178},	//13/1  (0010 0000 0)
	{0x41,	9,	179},	//-13/1 (0010 0000 1)
	{0x30,	17,	180},	//13/2  (0000 0000 0001 1000 0)
	{0x31,	17,	181},	//-13/2 (0000 0000 0001 1000 1)
	{0x1c,	11,	182},	//14/1  (0000 0011 100)
	{0x1d,	11,	183},	//-14/1 (0000 0011 101)
	{0x2e,	17,	184},	//14/2  (0000 0000 0001 0111 0)
	{0x2f,	17,	185},	//-14/2 (0000 0000 0001 0111 1)
	{0x1a,	11,	186},	//15/1  (0000 0011 010)
	{0x1b,	11,	187},	//-15/1 (0000 0011 011)
	{0x2c,	17,	188},	//15/2  (0000 0000 0001 0110 0)
	{0x2d,	17,	189},	//-15/2 (0000 0000 0001 0110 1)
	{0x10,	11,	190},	//16/1  (0000 0010 000)
	{0x11,	11,	191},	//-16/1 (0000 0010 001)
	{0x2a,	17,	192},	//16/2  (0000 0000 0001 0101 0)
	{0x2b,	17,	193},	//-16/2 (0000 0000 0001 0101 1)
	{0x3e,	13,	194},	//17/1  (0000 0001 1111 0)
	{0x3f,	13,	195},	//-17/1 (0000 0001 1111 1)
	{0x34,	13,	196},	//18/1  (0000 0001 1010 0)
	{0x35,	13,	197},	//-18/1 (0000 0001 1010 1)
	{0x32,	13,	198},	//19/1  (0000 0001 1001 0)
	{0x33,	13,	199},	//-19/1 (0000 0001 1001 1)
	{0x2e,	13,	200},	//20/1  (0000 0001 0111 0)
	{0x2f,	13,	201},	//-20/1 (0000 0001 0111 1)
	{0x2c,	13,	202},	//21/1  (0000 0001 0110 0)
	{0x2d,	13,	203},	//-21/1 (0000 0001 0110 1)

//	{0x7e,	14,	204},	//22/1  (0000 0001 1111 10)
//	{0x7f,	14,	205},	//-22/1 (0000 0001 1111 11)
//	{0x7c,	14,	206},	//23/1  (0000 0001 1111 00)
//	{0x7d,	14,	207},	//-23/1 (0000 0001 1111 01)
//	{0x7a,	14,	208},	//24/1  (0000 0001 1110 10)
//	{0x7b,	14,	209},	//-24/1 (0000 0001 1110 11)
//	{0x78,	14,	210},	//25/1  (0000 0001 1110 00)
//	{0x79,	14,	211},	//-25/1 (0000 0001 1110 01)
//	{0x76,	14,	212},	//26/1  (0000 0001 1101 10)
//	{0x77,	14,	213},	//-26/1 (0000 0001 1101 11)
	{0x3e,	14,	204},	//22/1  (0000 0001 1111 10)
	{0x3f,	14,	205},	//-22/1 (0000 0001 1111 11)
	{0x3c,	14,	206},	//23/1  (0000 0001 1111 00)
	{0x3d,	14,	207},	//-23/1 (0000 0001 1111 01)
	{0x3a,	14,	208},	//24/1  (0000 0001 1110 10)
	{0x3b,	14,	209},	//-24/1 (0000 0001 1110 11)
	{0x38,	14,	210},	//25/1  (0000 0001 1110 00)
	{0x39,	14,	211},	//-25/1 (0000 0001 1110 01)
	{0x36,	14,	212},	//26/1  (0000 0001 1101 10)
	{0x37,	14,	213},	//-26/1 (0000 0001 1101 11)

	{0x3e,	17,	214},	//27/1  (0000 0000 0001 1111 0)
	{0x3f,	17,	215},	//-27/1 (0000 0000 0001 1111 1)
	{0x3c,	17,	216},	//28/1  (0000 0000 0001 1110 0)
	{0x3d,	17,	217},	//-28/1 (0000 0000 0001 1110 1)
	{0x3a,	17,	218},	//29/1  (0000 0000 0001 1101 0)
	{0x3b,	17,	219},	//-29/1 (0000 0000 0001 1101 1)
	{0x38,	17,	220},	//30/1  (0000 0000 0001 1100 0)
	{0x39,	17,	221},	//-30/1 (0000 0000 0001 1100 1)
	{0x36,	17,	222},	//31/1  (0000 0000 0001 1011 0)
	{0x37,	17,	223},	//-31/1 (0000 0000 0001 1011 1)

	//Escape code
	{0x01,  6,  RL_ESCAPE_CODE},
	{0x00,	0,	0} //end of table
};

/* Run-level look up table.
 */
static const RunLevel __run_levels[] = {
	{0,	1},	//0
	{0,	-1},	//1
	{0,	1},	//2
	{0,	-1},	//3
	{0,	2},	//4
	{0,	-2},	//5
	{0,	3},	//6
	{0,	-3},	//7
	{0,	4},	//8
	{0,	-4},	//9
	{0,	5},	//10
	{0,	-5},	//11
	{0,	6},	//12
	{0,	-6},	//13
	{0,	7},	//14
	{0,	-7},	//15
	{0,	8},	//16
	{0,	-8},	//17
	{0,	9},	//18
	{0,	-9},	//19
	{0,	10},	//20
	{0,	-10},	//21
	{0,	11},	//22
	{0,	-11},	//23
	{0,	12},	//24
	{0,	-12},	//25
	{0,	13},	//26
	{0,	-13},	//27
	{0,	14},	//28
	{0,	-14},	//29
	{0,	15},	//30
	{0,	-15},	//31
	{0,	16},	//32
	{0,	-16},	//33
	{0,	17},	//34
	{0,	-17},	//35
	{0,	18},	//36
	{0,	-18},	//37
	{0,	19},	//38
	{0,	-19},	//39
	{0,	20},	//40
	{0,	-20},	//41
	{0,	21},	//42
	{0,	-21},	//43
	{0,	22},	//44
	{0,	-22},	//45
	{0,	23},	//46
	{0,	-23},	//47
	{0,	24},	//48
	{0,	-24},	//49
	{0,	25},	//50
	{0,	-25},	//51
	{0,	26},	//52
	{0,	-26},	//53
	{0,	27},	//54
	{0,	-27},	//55
	{0,	28},	//56
	{0,	-28},	//57
	{0,	29},	//58
	{0,	-29},	//59
	{0,	30},	//60
	{0,	-30},	//61
	{0,	31},	//62
	{0,	-31},	//63
	{0,	32},	//64
	{0,	-32},	//65
	{0,	33},	//66
	{0,	-33},	//67
	{0,	34},	//68
	{0,	-34},	//69
	{0,	35},	//70
	{0,	-35},	//71
	{0,	36},	//72
	{0,	-36},	//73
	{0,	37},	//74
	{0,	-37},	//75
	{0,	38},	//76
	{0,	-38},	//77
	{0,	39},	//78
	{0,	-39},	//79
	{0,	40},	//80
	{0,	-40},	//81
	{1,	1},	//82
	{1,	-1},	//83
	{1,	2},	//84
	{1,	-2},	//85
	{1,	3},	//86
	{1,	-3},	//87
	{1,	4},	//88
	{1,	-4},	//89
	{1,	5},	//90
	{1,	-5},	//91
	{1,	6},	//92
	{1,	-6},	//93
	{1,	7},	//94
	{1,	-7},	//95
	{1,	8},	//96
	{1,	-8},	//97
	{1,	9},	//98
	{1,	-9},	//99
	{1,	10},	//100
	{1,	-10},	//101
	{1,	11},	//102
	{1,	-11},	//103
	{1,	12},	//104
	{1,	-12},	//105
	{1,	13},	//106
	{1,	-13},	//107
	{1,	14},	//108
	{1,	-14},	//109
	{1,	15},	//110
	{1,	-15},	//111
	{1,	16},	//112
	{1,	-16},	//113
	{1,	17},	//114
	{1,	-17},	//115
	{1,	18},	//116
	{1,	-18},	//117
	{2,	1},	//118
	{2,	-1},	//119
	{2,	2},	//120
	{2,	-2},	//121
	{2,	3},	//122
	{2,	-3},	//123
	{2,	4},	//124
	{2,	-4},	//125
	{2,	5},	//126
	{2,	-5},	//127
	{3,	1},	//128
	{3,	-1},	//129
	{3,	2},	//130
	{3,	-2},	//131
	{3,	3},	//132
	{3,	-3},	//133
	{3,	4},	//134
	{3,	-4},	//135
	{4,	1},	//136
	{4,	-1},	//137
	{4,	2},	//138
	{4,	-2},	//139
	{4,	3},	//140
	{4,	-3},	//141
	{5,	1},	//142
	{5,	-1},	//143
	{5,	2},	//144
	{5,	-2},	//145
	{5,	3},	//146
	{5,	-3},	//147
	{6,	1},	//148
	{6,	-1},	//149
	{6,	2},	//150
	{6,	-2},	//151
	{6,	3},	//152
	{6,	-3},	//153
	{7,	1},	//154
	{7,	-1},	//155
	{7,	2},	//156
	{7,	-2},	//157
	{8,	1},	//158
	{8,	-1},	//159
	{8,	2},	//160
	{8,	-2},	//161
	{9,	1},	//162
	{9,	-1},	//163
	{9,	2},	//164
	{9,	-2},	//165
	{10,	1},	//166
	{10,	-1},	//167
	{10,	2},	//168
	{10,	-2},	//169
	{11,	1},	//170
	{11,	-1},	//171
	{11,	2},	//172
	{11,	-2},	//173
	{12,	1},	//174
	{12,	-1},	//175
	{12,	2},	//176
	{12,	-2},	//177
	{13,	1},	//178
	{13,	-1},	//179
	{13,	2},	//180
	{13,	-2},	//181
	{14,	1},	//182
	{14,	-1},	//183
	{14,	2},	//184
	{14,	-2},	//185
	{15,	1},	//186
	{15,	-1},	//187
	{15,	2},	//188
	{15,	-2},	//189
	{16,	1},	//190
	{16,	-1},	//191
	{16,	2},	//192
	{16,	-2},	//193
	{17,	1},	//194
	{17,	-1},	//195
	{18,	1},	//196
	{18,	-1},	//197
	{19,	1},	//198
	{19,	-1},	//199
	{20,	1},	//200
	{20,	-1},	//201
	{21,	1},	//202
	{21,	-1},	//203
	{22,	1},	//204
	{22,	-1},	//205
	{23,	1},	//206
	{23,	-1},	//207
	{24,	1},	//208
	{24,	-1},	//209
	{25,	1},	//210
	{25,	-1},	//211
	{26,	1},	//212
	{26,	-1},	//213
	{27,	1},	//214
	{27,	-1},	//215
	{28,	1},	//216
	{28,	-1},	//217
	{29,	1},	//218
	{29,	-1},	//219
	{30,	1},	//220
	{30,	-1},	//221
	{31,	1},	//222
	{31,	-1},	//223
};

/* Zig-zag index to DCT matrix pointer map
 */
static const int8_t __zigzag_coords[64] = {
    0,  1,  8,  16, 9,  2,  3,  10,
    17, 24, 32, 25, 18, 11, 4,  5,
    12, 19, 26, 33, 40, 48, 41, 34,
    27, 20, 13, 6,  7,  14, 21, 28,
    35, 42, 49, 56, 57, 50, 43, 36,
    29, 22, 15, 23, 30, 37, 44, 51,
    58, 59, 52, 45, 38, 31, 39, 46,
    53, 60, 61, 54, 47, 55, 62, 63
};

static const uint32_t  __bit_mask_r[] = {
    0xffffffff, 0xfffffffe, 0xfffffffc, 0xfffffff8,
    0xfffffff0, 0xffffffe0, 0xffffffc0, 0xffffff80,
    0xffffff00, 0xfffffe00, 0xfffffc00, 0xfffff800,
    0xfffff000, 0xffffe000, 0xffffc000, 0xffff8000,
    0xffff0000, 0xfffe0000, 0xfffc0000, 0xfff80000,
    0xfff00000, 0xffe00000, 0xffc00000, 0xff800000,
    0xff000000, 0xfe000000, 0xfc000000, 0xf8000000,
    0xf0000000, 0xe0000000, 0xc0000000, 0x80000000};

static const uint32_t __bit_test[] = {
    0x80000000, 0x40000000, 0x20000000, 0x10000000,
    0x08000000, 0x04000000, 0x02000000, 0x01000000,
    0x00800000, 0x00400000, 0x00200000, 0x00100000,
    0x00080000, 0x00040000, 0x00020000, 0x00010000,
    0x00008000, 0x00004000, 0x00002000, 0x00001000,
    0x00000800, 0x00000400, 0x00000200, 0x00000100,
    0x00000080, 0x00000040, 0x00000020, 0x00000010,
    0x00000008, 0x00000004, 0x00000002, 0x00000001};

#endif // MPEG1_CONSTS_H_INCLUDED
